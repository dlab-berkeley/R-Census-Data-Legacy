year = 2010,
geometry=TRUE,
shift_geo=TRUE)
## Shift Happens!
plot(pop2010geo_shifted$geometry)
st_write(pop2010geo_shifted, here("data_out/usa_pop2010_shifted.shp"))
# Check to see if the data was written out to a shapefile
dir(here("data_out"))
ca_med_age <- get_decennial(geography = "county",
variables = "P013001",
year = 2010,
state='CA',
geometry=TRUE)
# map it with plot
plot(ca_med_age['value'])
# map it with ggplot - setting CRS to 3310
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf(color=NA) +
coord_sf(crs = 3310) +
scale_fill_viridis_c(option = "viridis")
vars_acs2019 <- load_variables(year=2019,      # end year 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
# how many variables?
dim(vars_acs2019)
vars_acs2019 <- load_variables(year=2020,      # end year 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
# how many variables?
dim(vars_acs2019)
alco_mhhincome2 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome2['estimate'])
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome2['estimate'])
```
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome2['estimate'])
```
alco_mhhincome2 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
plot(alco_mhhincome2['estimate'])
```
vars_acs2015 <- load_variables(year=2015,      # end year 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
View(vars_acs2015)
alco_mhhincome2 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19019_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
```
alco_mhhincome2 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19019_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
```
B19013_001
alco_mhhincome2 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
alco_mhhincome2 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19019_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
plot(alco_mhhincome['estimate'])
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001"),
year = 2020,
state='CA',
county='Alameda',
geometry=TRUE
)
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome2['estimate'])
```
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome2['estimate'])
```
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome2['estimate'])
```
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome2['estimate'])
```
alco_mhhincome2015 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19019_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
plot(alco_mhhincome2015['estimate'])
head(alco_mhhincome)
plot(alco_mhhincome['estimate'])
alco_mhhincome2015 <- get_acs(geography='tract',
variables=c(median_hhincome = "B19019_001"),
year = 2015,
state='CA',
county='Alameda',
geometry=TRUE
)
plot(alco_mhhincome2015['estimate'])
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001"),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE
)
head(alco_mhhincome)
plot(alco_mhhincome['estimate'])
mapview(alco_mhhincome['estimate'])
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001", pop20='P001001'),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE
)
mapview(alco_mhhincome['estimate'])
View(vars_acs2019)
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001", pop20='B01003_001'),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE
)
mapview(alco_mhhincome['estimate'])
mapview(alco_mhhincome)
head(alco_mhhincome)
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001", pop20='B01003_001'),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE,
wide=T
)
head(alco_mhhincome)
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001", pop20='B01003_001'),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE,
output="wide"
)
head(alco_mhhincome)
mapview(alco_mhhincome)
mapview(alco_mhhincome) + mapview(alco_mhhincome['median_hhincomeE'])
mapview(alco_mhhincome[alco_mhhincome['median_hhincomeE'].isna(),])
mapview(alco_mhhincome[is.na(alco_mhhincome['median_hhincomeE']),])
What is the variable?
```{r}
mapview(alco_mhhincome)
mapview(alco_mhhincome[is.na(alco_mhhincome['median_hhincomeE']),])
What is the variable?
```{r}
mapview(alco_mhhincome)
mapview(alco_mhhincome[is.na(alco_mhhincome['median_hhincomeE']),])
What is the variable?
```{r}
mapview(alco_mhhincome)
#mapview(alco_mhhincome[is.na(alco_mhhincome['median_hhincomeE']),])
What is the variable?
```{r}
mapview(alco_mhhincome) + mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = NA)
#mapview(alco_mhhincome[is.na(alco_mhhincome['median_hhincomeE']),])
What is the variable?
```{r}
mapview(alco_mhhincome) + mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = black)
#mapview(alco_mhhincome[is.na(alco_mhhincome['median_hhincomeE']),])
mapview(alco_mhhincome) + mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = black)
mapview(alco_mhhincome) + mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "black")
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "black") + mapview(alco_mhhincome)
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "black") + mapview(alco_mhhincome, col.regions="white")
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "black") + mapview(alco_mhhincome, zcol="pop20", col.regions="white")
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001", pop20='B01003_001'),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE,
output="wide"
)
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "black") + mapview(alco_mhhincome, zcol="pop20", col.regions="white")
What is the variable?
```{r}
#mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "black") + mapview(alco_mhhincome, zcol="pop20")
#mapview(alco_mhhincome[is.na(alco_mhhincome['median_hhincomeE']),])
mapview(alco_mhhincome, zcol="pop20")
head(alco_mhhincome)
mapview(alco_mhhincome, zcol="pop20E")
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "black") + mapview(alco_mhhincome, zcol="pop20E", col.regions="white")
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "yellow") + mapview(alco_mhhincome, zcol="pop20E", col.regions="blue")
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "yellow") + mapview(alco_mhhincome, zcol="pop20E", col.regions="blue", alpha.regions=0.5)
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "yellow",alpha.regions) + mapview(alco_mhhincome, zcol="pop20E", col.regions="blue", alpha.regions=0.5)
mapview(alco_mhhincome['median_hhincomeE'],color = "cyan", col.regions = "yellow",alpha.regions=0.5) + mapview(alco_mhhincome, zcol="pop20E", col.regions="blue", alpha.regions=0.5)
mapview(alco_mhhincome['median_hhincomeE'],col.regions = "yellow",alpha.regions=0.5) + mapview(alco_mhhincome, zcol="pop20E", col.regions="lightblue", alpha.regions=0.5)
mapview(alco_mhhincome['median_hhincomeE'],col.regions = "white",alpha.regions=0.5) + mapview(alco_mhhincome, zcol="pop20E", col.regions="black", alpha.regions=0.5)
mapview(alco_mhhincome['median_hhincomeE'],col.regions = "white",alpha.regions=0.75) + mapview(alco_mhhincome, zcol="pop20E", col.regions="black", alpha.regions=0.5)
mapview(alco_mhhincome['median_hhincomeE'],col.regions = "white",alpha.regions=0.75) + mapview(alco_mhhincome, zcol="pop20E", col.regions="black", alpha.regions=0.25)
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001", pop20='B01003_001'),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE, # get the geography too
output="wide"
)
head(alco_mhhincome)
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001", pop20='B01003_001'),
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE # get the geography too
)
head(alco_mhhincome)
alco_mhhincome <- get_acs(geography='tract',
variables="B19013_001",
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE # get the geography too
)
head(alco_mhhincome)
alco_mhhincome <- get_acs(geography='tract',
variables="B19013_001",
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE, # get the geography too
output="wide"
)
head(alco_mhhincome)
```{r}
plot(alco_mhhincome['estimate'])
alco_mhhincome <- get_acs(geography='tract',
variables="B19013_001",
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE, # get the geography too
output="wide"
)
```{r}
plot(alco_mhhincome['estimate'])
alco_mhhincome <- get_acs(geography='tract',
variables="B19013_001",
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE # get the geography too
)
```{r}
head(alco_mhhincome)
```
```{r}
plot(alco_mhhincome['estimate'])
alco_mhhincome['estimate'] %>% select(estimate != NA) %>% plot()
```
alco_mhhincome['estimate'] %>% select(estimate != NA) %>% plot(estimate)
```
alco_mhhincome['estimate'] %>% filter(na.rm(estimate)) %>% plot(estimate)
```
alco_mhhincome %>% filter(estimate, na.rm= TRUE %>% plot(estimate)
```
alco_mhhincome %>% filter(estimate, na.rm= TRUE) %>% plot(estimate)
```
alco_mhhincome %>% filter(estimate, na.rm= TRUE) #%>% plot(estimate)
```
alco_mhhincome %>% filter(! is.na(estimate)) #%>% plot(estimate)
```
alco_mhhincome %>% filter(! is.na(estimate)) #%>% plot(estimate)
```
alco_mhhincome %>% filter(! is.na(estimate)) %>% plot(estimate)
```
alco_mhhincome %>% filter(! is.na(estimate)) %>% plot(alco_mhhincome['estimate'])
```
```{r}
plot(alco_mhhincome[!is.na(alco_mhhincome['estimate']),]['estimate'])
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome[!is.na(alco_mhhincome['estimate']),]['estimate'])
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome[!is.na(alco_mhhincome['estimate']),]['estimate'])
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome[!is.na(alco_mhhincome['estimate']),]['estimate'])
plot(alco_mhhincome[!is.na(alco_mhhincome['estimate']),][,'estimate'])
plot(alco_mhhincome['estimate'])
plot(alco_mhhincome[!is.na(alco_mhhincome['estimate']),][,'estimate'])
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf()
alco_mhhincome %>% filter(! is.na(estimate)) %>%
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf()
ggplot(alco_mhhincome[!is.na(alco_mhhincome['estimate']),], aes(fill = estimate)) +
geom_sf()
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf() +
xlim(122.5, 122.35)
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf() +
xlim(122.25, 122.35)
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf() +
xlim(122.75, 122.35)
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf() +
xlim(122.55, 122.35)
alco_mhhincome <- get_acs(geography='tract',
variables="B19013_001",
year = 2020,
state='CA',
county='Alameda',
geometry=TRUE # get the geography too
)
```{r}
head(alco_mhhincome)
```
plot(alco_mhhincome['estimate'])
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf()
ggplot(alco_mhhincome, aes(fill = estimate)) +
geom_sf()
```{r}
plot(med_hhincome['estimate'])
med_hhincome <- get_acs(geography='tract',
variables="B19013_001",
year = 2020,
state='CA',
county='San Francisco',
geometry=TRUE # get the geography too
)
```{r}
head(med_hhincome)
```
```{r}
plot(med_hhincome['estimate'])
ggplot(med_hhincome, aes(fill = estimate)) +
geom_sf()
ggplot(med_hhincome, aes(fill = estimate)) +
geom_sf() +
xlim(-122.55, -122.3)
inc_by_race <- c(White = "B19013H_001",
Black = "B19013B_001",
Asian = "B19013D_001",
Hispanic = "B19013I_001" )
alco_mhhinc_by_race <- get_acs(geography='tract',
variables=inc_by_race,
year = 2019,
state='CA',
county='Alameda',
geometry=T )
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +
scale_fill_viridis_c(option="magma")
# Display the map
medhhinc_facet_map
#
```
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf()
#geom_sf(color=NA) +
scale_fill_viridis_c(option="magma")
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf() +
#geom_sf(color=NA) +
scale_fill_viridis_c(option="magma")
# Display the map
medhhinc_facet_map
#
```
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +   # why color=NA?
scale_fill_viridis_c(option="magma")
# Display the map
medhhinc_facet_map
#
```
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +   # why color=NA?
scale_fill_viridis_c(option="magma")
# Display the map
medhhinc_facet_map
#
```
# Create the map
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +   # why color=NA?
scale_fill_viridis_c(option="plasma")
# Display the map
medhhinc_facet_map
# Create the map
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +   # why color=NA?
scale_fill_viridis_c(option="magma")
# Display the map
medhhinc_facet_map
mapview(med_hhincome)
mapview(med_hhincome, zcol="estimate")
mapview(med_hhincome)
# Create a color palette
pal <- colorNumeric(
palette = "YlOrRd",
domain = med_hhincome$estimate
)
# specify dataset
leaflet(med_hhincome) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
# adjust color palette and ploygon features.
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = .5,
color = ~pal(estimate)) %>%
# add legend
addLegend(pal = pal, values = ~estimate,
title = "Median Household Income",
labFormat = labelFormat(prefix = "$"),
position = "bottomleft")
sf_rented <- get_decennial(geography = "tract",  # census tabulation unit
variables =  "H004004", #number of households rented
year = 2010,
summary_var = "H004001",  # Total households
state='CA',
county='San Francisco',
geometry=T)
sf_pct_rented <- sf_rented[sf_rented$value > 0,] %>%
mutate(pct = 100 * (value / summary_value))
# Take a look
head(sf_pct_rented)
### Map the result
```{r, eval=F}
plot(sf_pct_rented['pct'])
```
sf_medrent <- get_acs(geography="tract",
variables=c(median_rent2019="B25064_001"),
year =2019,
state="CA",
county=c("San Francisco"),
geometry=T)
plot(sf_medrent[!is.na(sf_medrent$estimate),]['estimate'])
sf_medrent %>%
drop_na(estimate)  %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "magma")
mapview(sf_medrent)
mapview(sdf_medrent, zcol='estimate')
```
mapview(sdf_medrent, zcol='estimate')
```
mapview(sf_medrent, zcol='estimate')
```
View(sf_medrent)
mapview(sf_medrent, zcol='moe')
?get_acs
?write_csv
write_csv(state_pop, here('data_out/state_pop_2010.csv' )
)
?write_csv
write.csv(state_pop, here('data_out/state_pop_2010.csv') )
write_csv(state_pop, here('data_out/state_pop_2010.csv') )
# Uncomment this to install packages, if necessary.
# install.packages(c("here", "tidyverse", "sf", "leaflet", "mapview", "tigris", "tidycensus"))
library(here)
library(tidyverse)
library(sf)
library(leaflet)
library(mapview)
library(tigris)
library(tidycensus)
